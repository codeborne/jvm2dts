plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

group 'com.codeborne'
version '1.2.0'

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

repositories {
    mavenCentral()
}

signing {
    sign publishing.publications
}


publishing {
    publications {
        register("GithubPackages", MavenPublication) {
            pom {
                url = "https://github.com/codeborne/jvm2dts.git"
            }
        }
        register("SonaType", MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom {
                artifactId = 'jvm2dts'
                name = 'jvm2dts'
                description = 'Generate Java/Kotlin 11+ classes into TypeScript interfaces and enums'
                url = 'https://github.com/codeborne/jvm2dts'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'mmsoomre'
                        name = 'M. M. Soomre'
                        email = 'mmsoomre@pm.me'
                    }
                }
                scm {
                    connection = "scm:git:git://github.com/codeborne/jvm2dts.git"
                    developerConnection = 'scm:git:ssh://github.com:codeborne/jvm2dts.git'
                    url = 'https://github.com/codeborne/jvm2dts/tree/master'
                }
            }
        }
    }

    repositories {
        maven {
            name "GitHubPackages"
            url "https://maven.pkg.github.com/codeborne/jvm2dts"
            credentials {
                username System.getenv("GITHUB_ACTOR")
                password System.getenv("GITHUB_TOKEN")
            }
        }
        maven {
            name "MavenCentral"
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username System.getenv("MAVEN_USERNAME")
                password System.getenv("MAVEN_PASSWORD")
            }
        }
        maven {
            name "MavenCentralArtifact"
            url "https://oss.sonatype.org/content/repositories/snapshots"
            credentials {
                username System.getenv("MAVEN_USERNAME")
                password System.getenv("MAVEN_PASSWORD")
            }
        }
    }
}


dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.assertj:assertj-core:3.15.0'
    testImplementation 'org.jetbrains:annotations:20.1.0'
    testRuntimeOnly 'org.ow2.asm:asm:9.0'

    implementation 'org.ow2.asm:asm:9.0'
    implementation 'com.beust:jcommander:1.78'
}

test {
    useJUnitPlatform()
}

jar {

    from sourceSets.main.output
    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
    
    manifest {
        archiveBaseName = 'jvm2dts'
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': 'jvm2dts.Main'
        )
    }

}
