plugins {
    id 'java'
    id 'maven-publish'
}

group 'com.github.codeborne'
version '1.6-SNAPSHOT'

sourceCompatibility = targetCompatibility = 11

compileJava {
    options.compilerArgs.add('--add-exports=java.base/jdk.internal.org.objectweb.asm=ALL-UNNAMED')
}

javadoc {
    options.addStringOption('-add-exports=java.base/jdk.internal.org.objectweb.asm=ALL-UNNAMED', '-quiet')
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

repositories {
    mavenCentral()
}

publishing {
    publications {
        register("SonaType", MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom {
                artifactId = 'jvm2dts'
                name = 'jvm2dts'
                description = 'Generate Java/Kotlin 11+ classes into TypeScript interfaces and enums'
                url = 'https://github.com/codeborne/jvm2dts'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'mmsoomre'
                        name = 'M. M. Soomre'
                        email = 'mmsoomre@pm.me'
                    }
                }
                scm {
                    connection = "scm:git:git://github.com/codeborne/jvm2dts.git"
                    developerConnection = 'scm:git:ssh://github.com:codeborne/jvm2dts.git'
                    url = 'https://github.com/codeborne/jvm2dts/tree/master'
                }
            }
        }
    }

    repositories {
        maven {
            name "MavenCentral"
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username System.getenv("MAVEN_USERNAME")
                password System.getenv("MAVEN_PASSWORD")
            }
        }
        maven {
            name "MavenCentralArtifact"
            url "https://oss.sonatype.org/content/repositories/snapshots"
            credentials {
                username System.getenv("MAVEN_USERNAME")
                password System.getenv("MAVEN_PASSWORD")
            }
        }
    }
}


dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.assertj:assertj-core:3.15.0'
    testImplementation 'org.jetbrains:annotations:20.1.0'
    testImplementation 'com.fasterxml.jackson.core:jackson-annotations:2.12.1'

    implementation 'com.beust:jcommander:1.78'
}

test {
    useJUnitPlatform()
    jvmArgs = ["--add-exports=java.base/jdk.internal.org.objectweb.asm=ALL-UNNAMED"]
}

jar {
    manifest {
        archiveBaseName = 'jvm2dts'
        attributes(
            'Class-Path': configurations.runtimeClasspath.collect { it.getName() }.join(' '),
            'Main-Class': 'jvm2dts.Main'
        )
    }
}
